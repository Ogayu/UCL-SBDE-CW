# -*- coding: utf-8 -*-
"""Analysis of a vapour compression system.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PhnCR52cThRjOoDPRGFTJHTf_eLEDiHw

# CoolProp library + additional imports
"""

pip install CoolProp

import CoolProp as CP
from CoolProp.CoolProp import PropsSI
import pandas as pd
import matplotlib.pyplot as plt

"""# Helpful Links
* [List of fluids](http://www.coolprop.org/fluid_properties/PurePseudoPure.html#list-of-fluids)
* [Table of string inputs/ouputs to PropsSI function](https://www.coolprop.org/coolprop/HighLevelAPI.html?highlight=propssi#parameter-table)

Basic inputs/outputs for PropsSI function
* D density                 kg/m^3
* T temperature             K
* P pressure                Pa
* H mass specific enthalpy 	J/kg
* S Mass specific entropy 	J/kg/K
* Q Mass vapor quality      mol/mol

# COP function definitions

## Single stage
"""

def COP(fluid):
  #definition for single stage cycle
 	#fluid used in the cycle
  #print("fluid: ",fluid)
  Ta = 273.15 + 35  #ambient temp
  Tcr = 273.15 - 15 #cold room temp
  te = Tcr - 10 #evaporation temp 10K lower than cold room temp
  tc = Ta + 15 #condensation temp 15K higher than ambient temp

  h1 = PropsSI('H', 'T', te, 'Q', 1, fluid)
  s1 = PropsSI('S', 'T', te, 'Q', 1, fluid)
  p2 = PropsSI('P', 'T', tc, 'Q', 1, fluid)
  h2 = PropsSI('H', 'P', p2, 'S', s1, fluid)
  w12 = h2 - h1  
  h3 = PropsSI('H', 'P', p2, 'Q', 0, fluid)
  h4 = h3
  q41= h1 - h4
  """#debbuging prints
  print("Ta:",Ta-273.15,"Tcr:",Tcr-273.15,"t1:",t1-273.15,"t2:",t2-273.15)
  print("h1:",round(h1/1e3,1),"kJ/kg")
  print("h2:",round(h2/1e3,1),"kJ/kg")
  print("s1:",round(s1/1e3,2),"kJ/kgK")
  print("p1:",round(p1/1e5,2),"bar")
  print("p2:",round(p2/1e5,2),"bar")
  print("w12:",round(w12/1e3,1),"kJ/kg")
  print("h3:",round(h3/1e3,1),"kJ/kg")
  print("h4:",round(h4/1e3,1),"kJ/kg")
  print("q41:",round(q41/1e3,1),"kJ/kg")"""
  return q41/w12 #COP

"""## Cascade system"""

def COP2(fluid1,fluid2,tint):
  #definition for cascade system
  #fluid1 lower temperature cycle
  #fluid2 higher temperature cycle
  #tint intermediate temperature

  Q41=20000 # [W] Cooling power
  Ta = 273.15 + 35  #ambient temp
  Tcr = 273.15 - 15 #cold room temp
  t1 = Tcr - 10 #evaporation temp 10K lower than cold room temp
  t6 = Ta + 15 #condensation temp 15K higher than ambient temp
  tint=tint+273.15
  h1 = PropsSI('H', 'T', t1, 'Q', 1, fluid1)
  s1 = PropsSI('S', 'T', t1, 'Q', 1, fluid1)
  pint1 = PropsSI('P', 'T', tint, 'Q', 1, fluid1)
  h2 = PropsSI('H', 'P', pint1, 'S', s1, fluid1)
  h3 = PropsSI('H', 'T', tint, 'Q', 0, fluid1)
  h4=h3
  s5 = PropsSI('S', 'T', tint, 'Q', 1, fluid2)
  pint2 = PropsSI('P', 'T', tint, 'Q', 1, fluid2)
  h5 = PropsSI('H', 'P', pint2, 'Q', 1, fluid2) 
  h7 = PropsSI('H', 'T', t6, 'Q', 0, fluid2)
  p6 = PropsSI('P', 'T', t6, 'Q', 1, fluid2)
  h6 = PropsSI('H', 'P', p6, 'S', s5, fluid2)
  w12 = h2 - h1 
  w56 = h6 - h5 
  q41= h1 - h4 
  mlow = Q41/q41
  mhigh=mlow*(h2-h3)/(h5-h7)
  W12 = mlow*w12  #lower cycle compressor power
  W56 = mhigh*w56 #higher cycle compressor power

  #debbuging
  """print("t1:",t1-273.15,"Tcr:",Tcr-273.15,"tint:",round(tint-273.15,1),"Ta:",Ta-273.15,"t6:",t6-273.15)
  print("h1:",round(h1/1e3,1),"kJ/kg")
  print("h2:",round(h2/1e3,1),"kJ/kg")
  print("h3:",round(h3/1e3,1),"kJ/kg")
  print("h4:",round(h4/1e3,1),"kJ/kg")
  print("h5:",round(h5/1e3,1),"kJ/kg")
  print("h6:",round(h6/1e3,1),"kJ/kg")
  print("h7:",round(h7/1e3,1),"kJ/kg")
  print("s1:",round(s1/1e3,2),"kJ/kgK")
  print("s5:",round(s5/1e3,2),"kJ/kgK")
  print("pint1:",round(pint1/1e5,2),"bar")
  print("pint2:",round(pint2/1e5,2),"bar")
  print("p6:",round(p6/1e5,2),"bar")
  print("w12:",round(w12/1e3,1),"kJ/kg")
  print("w56:",round(w56/1e3,1),"kJ/kg")
  print("q41:",round(q41/1e3,1),"kJ/kg")
  print("mlow:",round(mlow,3),"kg/s")
  print("mhigh:",round(mhigh,3),"kg/s")"""

  return Q41/(W12+W56) #COP - Coefficient of Performance

"""# Results

## Value Validation
"""

COP2("R404A","R404A",0)

"""##COP values for each fluid in single stage system"""

data={'Fluid': ["R12","R404A","R134a"], 
      'COP':[COP("R12"),COP("R404A"),COP("R134a")]}
data=pd.DataFrame(data)
data["COP"]=round(data["COP"],2)
data

"""##COP values for each fluid arrangement in cascade system"""

data=pd.DataFrame()
tint_list=list(range(-10,40,1))
data['tint']=tint_list
COP_list=list() 

for item in tint_list:
      COP=COP2("R134a","R134a",item)
      COP_list.append(COP)    
data['2xR134a']=COP_list
plt.plot(tint_list,COP_list,label="2xR134a")     
COP_list=list()

for item in tint_list:
      COP=COP2("R404A","R404A",item)
      COP_list.append(COP)
data['2xR404A']=COP_list
plt.plot(tint_list,COP_list,label="2xR404A") 
COP_list=list()

for item in tint_list:
      COP=COP2("R404A","R134a",item)
      COP_list.append(COP)
data['R404A_R134a']=COP_list
plt.plot(tint_list,COP_list,label="R404A_R134a") 
COP_list=list()

for item in tint_list:
      COP=COP2("R134a","R404A",item)
      COP_list.append(COP)
data['R134a_R404A']=COP_list
plt.plot(tint_list,COP_list,label="R134a_R404A") 
plt.title('COP againt Tint for each cascade system')
plt.xlabel('Intermidate Temperature [*C]')
plt.ylabel('COP [-]')
data=round(data,2)
plt.legend()
data.head()
plt.savefig('cascade_chart.png')

"""##Max COP values for each fluid arrangement"""

#create empty list
MAXCOP_list=list()
#append highest COP for each column
for item in range(1,5,1):
    MAXCOP_list.append('%.2f' % max(data.iloc[:,item]))
#create list made of column names - fluids      
columns=list(data.columns[1:5])
#create dataframe with Fluids,Max_COP and intermidate temp for Max_COP
MAX_COP_data={'Fluids'    : columns, 
              'Max_COP'   : MAXCOP_list,
              'tint [*C]' : data.iloc[data.idxmax()[1:5]]['tint']}
MAXCOP=pd.DataFrame(MAX_COP_data)
MAXCOP.sort_values("Max_COP",ascending=False)